#----*--------------------------------------------------------------------------
# Configures the [neon-log-collector] service containers.  This service receives
# log events from the cluster nodes via [neon-log-host] and then:
#
#       * Normalizes the event records
#       * Persists them to the [neon-log-esdata] Elasticsearch cluster
#
# [neon-log-host] responsibilities
# -------------------------------------
# This runs as a Docker local container on every Docker node.  It is 
# responsible for:
#
#       1. Reading events from the systemd journal.
#       2. Receiving events from local daemons and containers
#          via syslog and tagging these with [syslog].
#       3. Receiving events from local Docker containers that
#          use the [fluentd] log driver.
#       4. Adding datacenter and node metadata to each event.
#       5. Forwarding the events to the [neon-log-collector]
#          service for filtering, normalization and persistance.
#
# [neon-log-collector] responsibilities
# -------------------------------------
# This runs as a Docker service and where most, if not all, custom
# event processing will take place.  The idea is that the [neon-log-host]
# containers are responsible for capturing events and adding a bit of 
# source and datacenter/node metadata.
#
# Then the [neon-log-collector] service handles most of the dirty work, 
# filtering, parsing, normalization, and persistence and/or forwarding 
# events for further downstream processing.  The idea behind centralizing 
# this is to make it relatively easy to customize cluster log processing.

#------------------------------------------------------------------------------
# Receive forwarded events.

<source>    
    @type   forward
    bind    0.0.0.0
    port    24224
</source>

# We need to avoid capturing logs from Fluentd/TD-Agent itself to avoid 
# cascading events when there's a problem with the log pipeline.  Operators
# will need to examine the source logs to diagnose these problems.

<match fluent.**>
    @type   null
</match>

#------------------------------------------------------------------------------
# Handle neonCLUSTER Proxy events.

# NOTE: I'm hardcoding the [local7] facility here which maps to the 
#       [NeonSysLogFacility.ProxyName] constant definition.  If that
#       definition changes, you'll need to change this too.

<filter syslog.local7.**>
    @type   neon-proxy
</filter>

<filter syslog.local7.**>
    @type   neon-proxy-geoip
</filter>

#------------------------------------------------------------------------------
# Handle events from Docker containers.

<filter **>
    @type   neon-docker
</filter>

#------------------------------------------------------------------------------
# Handle events from services hosted by systemd.

<filter systemd.**>
    @type   neon-systemd
</filter>

#------------------------------------------------------------------------------
# Persist remaining events to the Elasticsearch cluster under the Logstash index
# after stripping out any non-whitelisted fields.
#
# Documentation: https://github.com/uken/fluent-plugin-elasticsearch

<filter **>
    @type               record_modifier
    whitelist_keys      @timestamp,cluster,index,cid,cid_full,datacenter,environment,level,message,module,node,node_role,service,service_host,service_type,tag,proxy,location,audit,json
</filter>

<match **>
    @type               elasticsearch
    host                "#{ENV['NeonHosts_LogEsData']}"
    port                "#{ENV['NeonHostPorts_ProxyPrivateHttpLogEsData']}"

    logstash_format     true
    type_name           default
    include_tag_key     true
    templates           {"logstash":"/etc/td-agent/template/logstash.json"}
    resurrect_after     10s
    time_key_format     %Y-%m-%dT%H:%M:%S.%L%z

    # $todo(jeff.lill):
    #
    # I'm not entirely sure that this Elasticsearch plugin is 
    # compatible with the new <buffer>...</buffer> parameters
    # implemented by TD-Agent 3 (like I'm using in [neon-log-host]).
    # I was seeing an out-of-memory exception in the service logs
    # but [neon-log-collector] still seemed to work.
    #
    # I'm going to stick with the old way though for now, just
    # in case.

    buffer_type         memory
    buffer_chunk_limit  8m      # Maximum bytes for each buffered chuck
    buffer_queue_limit  8       # Maximum number of queued chunks
    flush_interval      1s
    disable_retry_limit
    retry_wait          1s
    max_retry_wait      15s
    num_threads         1

    # Enable these if necessary for debugging only.

    # include_tag_key     true
    # tag_key             tag
</match>
