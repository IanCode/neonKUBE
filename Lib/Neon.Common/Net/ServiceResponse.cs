//-----------------------------------------------------------------------------
// FILE:	    ServiceResponse.cs
// CONTRIBUTOR: Jeff Lill
// COPYRIGHT:	Copyright (c) 2016-2019 by neonFORGE, LLC.  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Diagnostics.Contracts;
using System.Dynamic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

using Newtonsoft;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

using Neon.Common;
using Neon.Net;
using Neon.Retry;

namespace Neon.Net
{
    /// <summary>
    /// Wraps a <see cref="JsonResponse"/>, adding the <see cref="Result"/> property.  This is
    /// used by service model classes generated by the [Neon.CodeGen] assembly.
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public class ServiceResponse<T> : JsonResponse
    {
        /// <summary>
        /// 
        /// </summary>
        /// <param name="requestUri"></param>
        /// <param name="httpResponse"></param>
        /// <param name="responseText"></param>
        public ServiceResponse(string requestUri, HttpResponseMessage httpResponse, string responseText)
            : base(requestUri, httpResponse, responseText)
        {
        }

        /// <summary>
        /// Set to the deserialized result returned by a HTTP request when
        /// the operation was successful.  This will be <c>null </c> if the
        /// operation failed or if the remote service method returns <c>void</c>.
        /// </summary>
        public T Result { get; set; }
    }
}
