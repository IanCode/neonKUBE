#------------------------------------------------------------------------------
# Cheats for JEFF home environment.

#------------------------------------------------------------------------------
# [neon]: Ubuntu 16.04

neon login rm root@home --force
neon cluster prepare %NF_ROOT%\Devops\Home\home-small.json -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --force
neon cluster setup -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --unredacted root@home --direct

neon login rm root@home --force
neon cluster prepare %NF_ROOT%\Devops\Home\home-large.json -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --force
neon cluster setup -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 root@home --direct

neon cluster prepare %NF_ROOT%\Devops\Home\home-azure.json -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10
neon cluster setup -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 root@azure --direct

neon login rm root@xen --force
neon cluster prepare %NF_ROOT%\Devops\Home\home-xen.json -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --force
neon cluster setup -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 root@xen --direct

neon login rm root@home-bare --force
neon cluster prepare %NF_ROOT%\Devops\Home\home-bare.json -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --force
neon cluster setup -u=sysadmin -p=sysadmin0000 --log-folder=d:\VM\neon.log --max-parallel=10 --unredacted root@home-bare --direct

# Create host VHDX template zip files that will be compatible with the [neon-cli] tool.

set FOLDER=C:\Docker\vhdx
REM neon zip create %FOLDER%\ubuntu-14.04-prep.vhdx %FOLDER%\ubuntu-14.04-prep.vhdx.zip
neon zip create %FOLDER%\ubuntu-16.04.3-prep.vhdx %FOLDER%\ubuntu-16.04.3-prep.vhdx.zip
copy %FOLDER%\ubuntu-16.04.3-prep.vhdx.zip %FOLDER%\ubuntu-16.04.latest-prep.vhdx.zip

#------------------------------------------------------------------------------
# RabbitMQ

sudo cat <<EOF > /usr/bin/sbash
# Starts Bash with elevated permissions while also inheriting
# the current environment variables.

/usr/bin/sudo -E bash \$@
EOF

sbash

echo mq > /etc/hostname
sed -i "s/ubuntu/mq/g" /etc/hosts
systemctl restart networking

chmod a+x /usr/bin/sbash

wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
dpkg -i erlang-solutions_1.0_all.deb

wget https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
apt-key add erlang_solutions.asc

apt-get update
apt-get install -yq esl-erlang socat

# $todo(jeff.lill): 
#
# Couldn't get High-Performance Erlang (HiPE) to install for better performnce.
# come back and investigate later.
#
# apt-get install erlang-base-hipe

curl -L http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.10/rabbitmq-server_3.6.10-1_all.deb -o rabbitmq.deb
dpkg --install rabbitmq.deb

rabbitmq-plugins enable rabbitmq_management
rabbitmqctl add_user admin password
rabbitmqctl set_user_tags admin administrator

# Dashboard: http://10.0.0.93:15672
# UID/PWD:   admin/password

rm *.deb
